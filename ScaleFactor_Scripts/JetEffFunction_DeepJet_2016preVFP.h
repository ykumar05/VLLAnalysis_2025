//bJet Efficiency for 2L exclusive final state

#include <vector>
#include "TMath.h"
using namespace std;

// bTag SF for the event (looped over all jets)
// For "data" efficiency, enter the stored JetDeepMediumCSVSF value
// For "mc" efficiency, enter JetDeepMediumCSVSF as 1.0 !!

// ------------------------------------------------------------------------------------------
// ------------------------------------------------------------------------------------------


// 2016
float AnaScript::bTagSF2016preVFP(int MCSample, vector<Particle>Jet){

  // bogus default values
  float probability_mc = 1.0;
  float probability_data = 1.0;
  float LJetEff[3][8] = { {  0.5,  0.5,  0.5,  0.5,  0.5,  0.5,  0.5,  0.5   }, {  0.5,  0.5,  0.5,  0.5,  0.5,  0.5,  0.5,  0.5   }, {  0.5,  0.5,  0.5,  0.5,  0.5,  0.5,  0.5,  0.5   } };
  float CJetEff[3][8] = { {  0.5,  0.5,  0.5,  0.5,  0.5,  0.5,  0.5,  0.5   }, {  0.5,  0.5,  0.5,  0.5,  0.5,  0.5,  0.5,  0.5   }, {  0.5,  0.5,  0.5,  0.5,  0.5,  0.5,  0.5,  0.5   } };
  float BJetEff[3][8] = { {  0.5,  0.5,  0.5,  0.5,  0.5,  0.5,  0.5,  0.5   }, {  0.5,  0.5,  0.5,  0.5,  0.5,  0.5,  0.5,  0.5   }, {  0.5,  0.5,  0.5,  0.5,  0.5,  0.5,  0.5,  0.5   } };
  //
  // ----------------------

  //For the sample DYJetsToLL_M10to50:
  if(MCSample == 1){
    float BJetEff_temp[3][8] = {{1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    float CJetEff_temp[3][8] = {{0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    float LJetEff_temp[3][8] = {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    for(int i=0; i<3 ; i++){
      for(int j=0; j<8; j++){
        LJetEff[i][j] = LJetEff_temp[i][j];
        CJetEff[i][j] = CJetEff_temp[i][j];
        BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }
  
  //For the sample DYJetsToLL_M50:
  if(MCSample == 2){
    float BJetEff_temp[3][8] = {{0.75, 0.8032786846160889, 0.8444444537162781, 0.7777777910232544, 0.875, 1.0, 1.0, 0.0}, {0.7457627058029175, 0.699999988079071, 0.8157894611358643, 0.8999999761581421, 0.8333333134651184, 1.0, 0.0, 0.0}, {0.5757575631141663, 0.6785714030265808, 0.692307710647583, 0.6363636255264282, 0.5, 1.0, 0.0, 0.0}};
    float CJetEff_temp[3][8] = {{0.1666666716337204, 0.10000000149011612, 0.03448275849223137, 0.1818181872367859, 0.25, 0.1666666716337204, 0.5, 0.0}, {0.12631578743457794, 0.15789473056793213, 0.24137930572032928, 0.0833333358168602, 0.375, 0.5, 0.0, 0.0}, {0.1428571492433548, 0.20588235557079315, 0.0, 0.20000000298023224, 0.0, 0.0, 0.0, 0.0}};
    float LJetEff_temp[3][8] = {{0.018660811707377434, 0.00712589081376791, 0.01666666753590107, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.01381509006023407, 0.008287292905151844, 0.004291845485568047, 0.007194244768470526, 0.012048192322254181, 0.0476190485060215, 0.0, 0.0}, {0.025459688156843185, 0.02766798436641693, 0.011695906519889832, 0.0, 0.020408162847161293, 0.05000000074505806, 0.0, 0.0}};
    
    for(int i=0; i<3 ; i++){
      for(int j=0; j<8; j++){
        LJetEff[i][j] = LJetEff_temp[i][j];
        CJetEff[i][j] = CJetEff_temp[i][j];
        BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }

  //======================================================================//
  
  //For the sample Rare_THQ:
  if(MCSample == 10){
    float BJetEff_temp[3][8] = {{0.7736786007881165, 0.8116987347602844, 0.8194656372070312, 0.8304877877235413, 0.8351219296455383, 0.8348134756088257, 0.8188976645469666, 0.7142857313156128}, {0.7458075881004333, 0.7630966305732727, 0.7798705101013184, 0.8147818446159363, 0.8197932243347168, 0.8152866363525391, 0.7661290168762207, 0.75}, {0.6673897504806519, 0.6830663681030273, 0.7321428656578064, 0.6814814805984497, 0.7416974306106567, 0.70652174949646, 0.6000000238418579, 0.0}};
    float CJetEff_temp[3][8] = {{0.125, 0.09322033822536469, 0.1696428507566452, 0.17543859779834747, 0.06666667014360428, 0.2631579041481018, 0.0, 0.0}, {0.16806723177433014, 0.15748031437397003, 0.16049382090568542, 0.171875, 0.05882352963089943, 0.2142857164144516, 0.27272728085517883, 0.0}, {0.1205357164144516, 0.12781955301761627, 0.1538461595773697, 0.07575757801532745, 0.16129031777381897, 0.13333334028720856, 0.0, 0.0}};
    float LJetEff_temp[3][8] = {{0.013767783530056477, 0.010438413359224796, 0.004076086916029453, 0.0026666666381061077, 0.0, 0.009999999776482582, 0.027027027681469917, 0.20000000298023224}, {0.015123739838600159, 0.01004016026854515, 0.014686248265206814, 0.01123595517128706, 0.0035335689317435026, 0.04895104840397835, 0.03773584961891174, 0.0}, {0.028837209567427635, 0.013456686399877071, 0.012401352636516094, 0.017405062913894653, 0.02427184395492077, 0.03896103799343109, 0.08620689809322357, 1.0}};
    
    for(int i=0; i<3 ; i++){
      for(int j=0; j<8; j++){
        LJetEff[i][j] = LJetEff_temp[i][j];
        CJetEff[i][j] = CJetEff_temp[i][j];
        BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }

  //For the sample Rare_THW:
  if(MCSample == 11){
    float BJetEff_temp[3][8] = {{0.7685825824737549, 0.8052827715873718, 0.8205950856208801, 0.8192955851554871, 0.8362026810646057, 0.8168007135391235, 0.8344155550003052, 0.8440366983413696}, {0.7365347146987915, 0.758082926273346, 0.792682945728302, 0.784466028213501, 0.7938718795776367, 0.8111533522605896, 0.8061538338661194, 0.699999988079071}, {0.6659619212150574, 0.6837238073348999, 0.7293814420700073, 0.731067955493927, 0.7596774101257324, 0.779411792755127, 0.7708333134651184, 0.800000011920929}};
    float CJetEff_temp[3][8] = {{0.1809355765581131, 0.14762930572032928, 0.12968917191028595, 0.12550607323646545, 0.13928012549877167, 0.18356163799762726, 0.25531914830207825, 0.29655173420906067}, {0.16850219666957855, 0.16519173979759216, 0.14490674436092377, 0.1493624746799469, 0.1570248007774353, 0.19087137281894684, 0.20000000298023224, 0.22857142984867096}, {0.13533835113048553, 0.11178247630596161, 0.13649851083755493, 0.0917874425649643, 0.1942446082830429, 0.12162162363529205, 0.3333333432674408, 0.3333333432674408}};
    float LJetEff_temp[3][8] = {{0.024695122614502907, 0.014716703444719315, 0.012924480251967907, 0.012524720281362534, 0.01400679163634777, 0.016847172752022743, 0.03519510477781296, 0.09602648764848709}, {0.02373673766851425, 0.013880684971809387, 0.015136557631194592, 0.016711832955479622, 0.0213396567851305, 0.026761820539832115, 0.061714284121990204, 0.13793103396892548}, {0.03144654259085655, 0.017006803303956985, 0.02053140103816986, 0.024576270952820778, 0.024719100445508957, 0.03272727131843567, 0.06923077255487442, 0.18421052396297455}};
    
    for(int i=0; i<3 ; i++){
      for(int j=0; j<8; j++){
        LJetEff[i][j] = LJetEff_temp[i][j];
        CJetEff[i][j] = CJetEff_temp[i][j];
        BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }

  //For the sample Rare_TTTT:
  if(MCSample == 12){
    float BJetEff_temp[3][8] = {{0.7663946747779846, 0.7964335083961487, 0.8037470579147339, 0.8134622573852539, 0.8144241571426392, 0.8173369765281677, 0.8012693524360657, 0.7526316046714783}, {0.7285202741622925, 0.7535628080368042, 0.760201632976532, 0.7813467979431152, 0.7922755479812622, 0.7891805768013, 0.7928853631019592, 0.675000011920929}, {0.6564164161682129, 0.6825143098831177, 0.6840299963951111, 0.716265082359314, 0.7219047546386719, 0.7355072498321533, 0.7611111402511597, 0.6666666865348816}};
    float CJetEff_temp[3][8] = {{0.1683121770620346, 0.1574603170156479, 0.14457108080387115, 0.14852941036224365, 0.15360824763774872, 0.15689654648303986, 0.17616580426692963, 0.17073170840740204}, {0.16081000864505768, 0.14207221567630768, 0.15390878915786743, 0.15615615248680115, 0.14180207252502441, 0.1882951706647873, 0.2671755850315094, 0.25}, {0.12350597977638245, 0.11656441539525986, 0.13861386477947235, 0.12732096016407013, 0.13469387590885162, 0.19402985274791718, 0.2711864411830902, 0.0}};
    float LJetEff_temp[3][8] = {{0.019175317138433456, 0.009337962605059147, 0.011799409985542297, 0.010690342634916306, 0.012687726877629757, 0.012597741559147835, 0.024482108652591705, 0.10810811072587967}, {0.019119497388601303, 0.0133255235850811, 0.013044186867773533, 0.012950317934155464, 0.015791170299053192, 0.026826484128832817, 0.05343511328101158, 0.16129031777381897}, {0.024732070043683052, 0.016509974375367165, 0.015726681798696518, 0.01576044037938118, 0.033664457499980927, 0.03846153989434242, 0.07575757801532745, 0.2222222238779068}};
    
    for(int i=0; i<3 ; i++){
      for(int j=0; j<8; j++){
        LJetEff[i][j] = LJetEff_temp[i][j];
        CJetEff[i][j] = CJetEff_temp[i][j];
        BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }

  //For the sample Rare_TTWH:
  if(MCSample == 13){
    float BJetEff_temp[3][8] = {{0.7241379022598267, 0.7853881120681763, 0.8505747318267822, 0.8047618865966797, 0.8231292366981506, 0.8181818127632141, 0.8235294222831726, 0.0}, {0.7897727489471436, 0.7701863646507263, 0.7823529243469238, 0.8290598392486572, 0.7815126180648804, 0.7708333134651184, 0.9473684430122375, 0.75}, {0.7115384340286255, 0.6931818127632141, 0.7749999761581421, 0.6307692527770996, 0.75, 0.5714285969734192, 0.6666666865348816, 0.5}};
    float CJetEff_temp[3][8] = {{0.13793103396892548, 0.06666667014360428, 0.20370370149612427, 0.20000000298023224, 0.1538461595773697, 0.29411765933036804, 0.0, 0.0}, {0.17777778208255768, 0.054054055362939835, 0.13333334028720856, 0.13636364042758942, 0.1818181872367859, 0.4166666567325592, 0.5, 0.0}, {0.06060606241226196, 0.0, 0.10000000149011612, 0.0, 0.0, 0.25, 0.0, 0.0}};
    float LJetEff_temp[3][8] = {{0.037931036204099655, 0.021052632480859756, 0.006451612804085016, 0.023255813866853714, 0.011111111380159855, 0.057692307978868484, 0.0555555559694767, 0.0}, {0.03333333507180214, 0.011363636702299118, 0.04237288236618042, 0.033707864582538605, 0.018518518656492233, 0.043478261679410934, 0.0, 0.0}, {0.05521472543478012, 0.012987012974917889, 0.015384615398943424, 0.03448275849223137, 0.0, 0.0, 0.25, 0.0}};
    
    for(int i=0; i<3 ; i++){
      for(int j=0; j<8; j++){
        LJetEff[i][j] = LJetEff_temp[i][j];
        CJetEff[i][j] = CJetEff_temp[i][j];
        BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }

  //For the sample Rare_TTWW:
  if(MCSample == 14){
    float BJetEff_temp[3][8] = {{0.7673611044883728, 0.8011363744735718, 0.8070692420005798, 0.7887324094772339, 0.8577680587768555, 0.7713004350662231, 0.8888888955116272, 0.4444444477558136}, {0.758099377155304, 0.7598039507865906, 0.7620087265968323, 0.8059298992156982, 0.8040000200271606, 0.8272727131843567, 0.7755101919174194, 0.5}, {0.6791666746139526, 0.6896551847457886, 0.7614213228225708, 0.739393949508667, 0.7142857313156128, 0.8055555820465088, 0.6363636255264282, 0.0}};
    float CJetEff_temp[3][8] = {{0.15131579339504242, 0.1428571492433548, 0.15000000596046448, 0.13953489065170288, 0.1690140813589096, 0.1428571492433548, 0.29032257199287415, 0.375}, {0.16379310190677643, 0.1515151560306549, 0.08888889104127884, 0.21621622145175934, 0.125, 0.1428571492433548, 0.2916666567325592, 0.3333333432674408}, {0.13513512909412384, 0.14814814925193787, 0.10810811072587967, 0.1034482792019844, 0.15789473056793213, 0.0, 0.25, 0.0}}; 
    float LJetEff_temp[3][8] = {{0.013017751276493073, 0.009074410423636436, 0.012396694160997868, 0.008310249075293541, 0.003816793905571103, 0.024193547666072845, 0.04123711213469505, 0.05263157933950424}, {0.01976284570991993, 0.019801979884505272, 0.020304568111896515, 0.011538461782038212, 0.004854368977248669, 0.037383176386356354, 0.0535714291036129, 0.0}, {0.02500000037252903, 0.016260161995887756, 0.012605042196810246, 0.0, 0.029126213863492012, 0.06666667014360428, 0.05263157933950424, 0.0}};
    
    for(int i=0; i<3 ; i++){
      for(int j=0; j<8; j++){
        LJetEff[i][j] = LJetEff_temp[i][j];
        CJetEff[i][j] = CJetEff_temp[i][j];
        BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }

  //For the sample Rare_TTWZ:
  if(MCSample == 15){
    float BJetEff_temp[3][8] = {{0.7604790329933167, 0.7898089289665222, 0.8072625994682312, 0.8096885681152344, 0.8520179390907288, 0.7441860437393188, 0.7710843086242676, 0.8571428656578064}, {0.7264957427978516, 0.7821782231330872, 0.7457627058029175, 0.8181818127632141, 0.801369845867157, 0.8404255509376526, 0.807692289352417, 0.3333333432674408}, {0.7177419066429138, 0.7711864113807678, 0.6704545617103577, 0.5760869383811951, 0.8166666626930237, 0.7241379022598267, 0.875, 0.0}};
    float CJetEff_temp[3][8] = {{0.1553398072719574, 0.12631578743457794, 0.17525772750377655, 0.06849315017461777, 0.1320754736661911, 0.09677419066429138, 0.23999999463558197, 0.0}, {0.14864864945411682, 0.19718310236930847, 0.1428571492433548, 0.1607142835855484, 0.1538461595773697, 0.1666666716337204, 0.13333334028720856, 0.0}, {0.09836065769195557, 0.15625, 0.0731707289814949, 0.20000000298023224, 0.06666667014360428, 0.3076923191547394, 0.20000000298023224, 0.5}};
    float LJetEff_temp[3][8] = {{0.022514071315526962, 0.015105740167200565, 0.018633540719747543, 0.0, 0.01595744676887989, 0.037383176386356354, 0.0416666679084301, 0.0}, {0.032634031027555466, 0.007547169923782349, 0.014705882407724857, 0.005376344081014395, 0.015625, 0.0533333346247673, 0.06451612710952759, 0.5}, {0.036101084202528, 0.02298850566148758, 0.013071895577013493, 0.0, 0.0416666679084301, 0.0, 0.0, 0.0}};
    
    for(int i=0; i<3 ; i++){
      for(int j=0; j<8; j++){
	LJetEff[i][j] = LJetEff_temp[i][j];
	CJetEff[i][j] = CJetEff_temp[i][j];
	BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }
  
  //For the sample Rare_TTZH:
  if(MCSample == 16){
    float BJetEff_temp[3][8] = {{0.7851002812385559, 0.7721893787384033, 0.80402010679245, 0.8618784546852112, 0.8388278484344482, 0.8224852085113525, 0.7910447716712952, 0.7692307829856873}, {0.7385159134864807, 0.7465753555297852, 0.7376425862312317, 0.7885462641716003, 0.7880794405937195, 0.762499988079071, 0.7575757503509521, 0.800000011920929}, {0.650602400302887, 0.6929824352264404, 0.7142857313156128, 0.7674418687820435, 0.8032786846160889, 0.800000011920929, 0.625, 0.0}};
    float CJetEff_temp[3][8] = {{0.17592592537403107, 0.16438356041908264, 0.18518517911434174, 0.125, 0.1818181872367859, 0.2068965584039688, 0.2666666805744171, 0.0}, {0.07894736528396606, 0.13333334028720856, 0.11320754885673523, 0.1190476194024086, 0.1538461595773697, 0.1875, 0.1538461595773697, 0.0}, {0.08888889104127884, 0.1034482792019844, 0.13333334028720856, 0.25, 0.0, 0.20000000298023224, 0.0, 0.0}};
    float LJetEff_temp[3][8] = {{0.024621212854981422, 0.009523809887468815, 0.00958466436713934, 0.029411764815449715, 0.006172839552164078, 0.012987012974917889, 0.0, 0.0}, {0.016867469996213913, 0.026431718841195107, 0.017699114978313446, 0.01875000074505806, 0.03703703731298447, 0.0, 0.05882352963089943, 0.0}, {0.03202847018837929, 0.01923076994717121, 0.014925372786819935, 0.016949152573943138, 0.017241379246115685, 0.0714285746216774, 0.1428571492433548, 0.0}};
    
    for(int i=0; i<3 ; i++){
      for(int j=0; j<8; j++){
        LJetEff[i][j] = LJetEff_temp[i][j];
        CJetEff[i][j] = CJetEff_temp[i][j];
        BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }

  //For the sample Rare_TTZZ:
  if(MCSample == 17){
    float BJetEff_temp[3][8] = {{0.7850000262260437, 0.7857142686843872, 0.8444444537162781, 0.8299492597579956, 0.847305417060852, 0.8186812996864319, 0.8518518805503845, 0.7692307829856873}, {0.7325581312179565, 0.7551020383834839, 0.7708978056907654, 0.7945205569267273, 0.774193525314331, 0.8421052694320679, 0.804347813129425, 0.8333333134651184}, {0.6222222447395325, 0.7536231875419617, 0.7337662577629089, 0.7008547186851501, 0.7213114500045776, 0.8235294222831726, 0.800000011920929, 0.0}};
    float CJetEff_temp[3][8] = {{0.20134228467941284, 0.1388888955116272, 0.15199999511241913, 0.15463916957378387, 0.1794871836900711, 0.2542372941970825, 0.23076923191547394, 0.20000000298023224}, {0.20338982343673706, 0.22093023359775543, 0.1149425283074379, 0.16129031777381897, 0.21739129722118378, 0.2068965584039688, 0.25, 1.0}, {0.20000000298023224, 0.1190476194024086, 0.06122449040412903, 0.07407407462596893, 0.1666666716337204, 0.07692307978868484, 0.0, 0.0}};
    float LJetEff_temp[3][8] = {{0.022696929052472115, 0.01004016026854515, 0.010504201985895634, 0.009803921915590763, 0.014285714365541935, 0.0, 0.07594936341047287, 0.07692307978868484}, {0.025477707386016846, 0.016304347664117813, 0.020408162847161293, 0.004310344811528921, 0.018292682245373726, 0.05454545468091965, 0.02500000037252903, 0.20000000298023224}, {0.04199475049972534, 0.022026430815458298, 0.02631578966975212, 0.008849557489156723, 0.016129031777381897, 0.0, 0.0625, 0.0}};
    
    for(int i=0; i<3 ; i++){
      for(int j=0; j<8; j++){
        LJetEff[i][j] = LJetEff_temp[i][j];
        CJetEff[i][j] = CJetEff_temp[i][j];
        BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }

  //======================================================================//
  
  //For the sample ZZ_ZZTo4L:
  if(MCSample == 22){
    float BJetEff_temp[3][8] ={{0.7664660215377808, 0.7941278219223022, 0.8057395219802856, 0.7939777970314026, 0.8159675002098083, 0.7656765580177307, 0.8018018007278442, 1.0}, {0.7227401733398438, 0.7473382353782654, 0.7778993248939514, 0.7929292917251587, 0.7825242877006531, 0.7748917937278748, 0.7966101765632629, 0.6666666865348816}, {0.6364644169807434, 0.6725552082061768, 0.6976967453956604, 0.7012522220611572, 0.7408906817436218, 0.7156862616539001, 0.8333333134651184, 1.0}}; 
    float CJetEff_temp[3][8] = {{0.16461512446403503, 0.13866756856441498, 0.14325647056102753, 0.14133858680725098, 0.138515904545784, 0.17790530622005463, 0.1705426424741745, 0.3684210479259491}, {0.15726681053638458, 0.1413361132144928, 0.14691011607646942, 0.13251729309558868, 0.15347950160503387, 0.16024340689182281, 0.23602484166622162, 0.0}, {0.14212706685066223, 0.12544454634189606, 0.1082550659775734, 0.12660731375217438, 0.12774451076984406, 0.15909090638160706, 0.13953489065170288, 0.0}};
    float LJetEff_temp[3][8] = {{0.0321279875934124, 0.017632093280553818, 0.011949291452765465, 0.010011941194534302, 0.00934224110096693, 0.014801722951233387, 0.028200166299939156, 0.0634920671582222}, {0.037986431270837784, 0.019794544205069542, 0.01562102884054184, 0.014868526719510555, 0.017961198464035988, 0.022906553000211716, 0.048192769289016724, 0.1782178282737732}, {0.04105173796415329, 0.021856164559721947, 0.018539005890488625, 0.0187586210668087, 0.022219136357307434, 0.037659961730241776, 0.056657224893569946, 0.05263157933950424}};
    
    for(int i=0; i<3 ; i++){
      for(int j=0; j<8; j++){
        LJetEff[i][j] = LJetEff_temp[i][j];
        CJetEff[i][j] = CJetEff_temp[i][j];
        BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }    

  //For the sample GluGluToContintoZZ_ZZTo4E:
  if(MCSample == 24){
    float BJetEff_temp[3][8] = {{0.7461832165718079, 0.7484076619148254, 0.8061674237251282, 0.7313432693481445, 0.6666666865348816, 0.3333333432674408, 1.0, 0.0}, {0.6901669502258301, 0.6739926934242249, 0.7883597612380981, 0.7162162065505981, 0.7142857313156128, 0.75, 0.0, 0.0}, {0.6226415038108826, 0.6584158539772034, 0.6219512224197388, 0.5625, 1.0, 0.6666666865348816, 0.0, 0.0}};
    float CJetEff_temp[3][8] = {{0.15786418318748474, 0.15968289971351624, 0.14700543880462646, 0.1627907007932663, 0.1587301641702652, 0.0476190485060215, 0.0, 0.0}, {0.1568276733160019, 0.14883148670196533, 0.12748344242572784, 0.09829059988260269, 0.1568627506494522, 0.1818181872367859, 0.4000000059604645, 0.0}, {0.13172252476215363, 0.10526315867900848, 0.09162303805351257, 0.09883721172809601, 0.0714285746216774, 0.0, 0.0, 0.0}};
    float LJetEff_temp[3][8] = {{0.03361228480935097, 0.01844058744609356, 0.013883561827242374, 0.012925034388899803, 0.011481055989861488, 0.020522387698292732, 0.021276595070958138, 0.0}, {0.03634161129593849, 0.018829401582479477, 0.01725262776017189, 0.014136222191154957, 0.01507808268070221, 0.026209676638245583, 0.06410256773233414, 0.0}, {0.03710556775331497, 0.01680181175470352, 0.016171617433428764, 0.014527127146720886, 0.028815368190407753, 0.04368932172656059, 0.0, 0.0}};
    
    for(int i=0; i<3 ; i++){
      for(int j=0; j<8; j++){
        LJetEff[i][j] = LJetEff_temp[i][j];
        CJetEff[i][j] = CJetEff_temp[i][j];
        BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }

  //For the sample GluGluToContintoZZ_ZZTo4Mu:
  if(MCSample == 25){
    float BJetEff_temp[3][8] = {{0.7642585635185242, 0.7722007632255554, 0.7580645084381104, 0.8904109597206116, 0.75, 0.75, 1.0, 0.0}, {0.7303823232650757, 0.7669491767883301, 0.7413793206214905, 0.7746478915214539, 0.8571428656578064, 0.800000011920929, 0.0, 0.0}, {0.641791045665741, 0.7127659320831299, 0.7235772609710693, 0.7115384340286255, 0.6666666865348816, 1.0, 0.0, 0.0}};
    float CJetEff_temp[3][8] = {{0.16315048933029175, 0.15738160908222198, 0.15824176371097565, 0.19463087618350983, 0.1666666716337204, 0.125, 0.25, 0.0}, {0.15547703206539154, 0.1398809552192688, 0.13849765062332153, 0.19871795177459717, 0.21052631735801697, 0.1538461595773697, 0.0, 0.0}, {0.1360136866569519, 0.12830957770347595, 0.150141641497612, 0.11029411852359772, 0.0625, 0.0, 0.0, 0.0}};
    float LJetEff_temp[3][8] = {{0.01786964386701584, 0.008746860548853874, 0.007844756357371807, 0.007235338911414146, 0.015384615398943424, 0.004926108289510012, 0.03030303120613098, 0.0}, {0.021156946197152138, 0.012295082211494446, 0.011893101967871189, 0.008945210836827755, 0.0077720205299556255, 0.03191489353775978, 0.0555555559694767, 0.0}, {0.0379713699221611, 0.020341072231531143, 0.01645510084927082, 0.014912654645740986, 0.023255813866853714, 0.016806723549962044, 0.05263157933950424, 0.0}};
    
    for(int i=0; i<3 ; i++){
      for(int j=0; j<8; j++){
        LJetEff[i][j] = LJetEff_temp[i][j];
        CJetEff[i][j] = CJetEff_temp[i][j];
        BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }

  //For the sample GluGluToContintoZZ_ZZTo2E2Mu:
  if(MCSample == 26){
    float BJetEff_temp[3][8] = {{0.75, 0.6710526347160339, 0.7636363506317139, 0.7575757503509521, 0.7142857313156128, 0.6000000238418579, 0.0, 0.0}, {0.6942446231842041, 0.7647058963775635, 0.6238532066345215, 0.7567567825317383, 0.800000011920929, 0.0, 0.0, 0.0}, {0.5958333611488342, 0.5686274766921997, 0.7101449370384216, 0.6818181872367859, 0.6666666865348816, 1.0, 0.0, 0.0}};
    float CJetEff_temp[3][8] = {{0.18853363394737244, 0.1651376187801361, 0.14527027308940887, 0.17241379618644714, 0.09090909361839294, 0.1111111119389534, 0.0, 0.0}, {0.15838150680065155, 0.15107913315296173, 0.10469313710927963, 0.1666666716337204, 0.13333334028720856, 0.09090909361839294, 0.0, 0.0}, {0.12172573059797287, 0.1147058829665184, 0.16483516991138458, 0.16249999403953552, 0.15000000596046448, 0.0, 0.0, 0.0}};
    float LJetEff_temp[3][8] = {{0.03133469820022583, 0.01965700462460518, 0.013194330967962742, 0.014036579988896847, 0.021978022530674934, 0.013636363670229912, 0.035087719559669495, 0.0}, {0.03576606884598732, 0.01706518419086933, 0.015252621844410896, 0.013715207576751709, 0.03125, 0.028169013559818268, 0.0, 0.0}, {0.03403875604271889, 0.016530092805624008, 0.018414918333292007, 0.02243211306631565, 0.01735357940196991, 0.010869565419852734, 0.0, 0.0}};
    
    for(int i=0; i<3 ; i++){
      for(int j=0; j<8; j++){
        LJetEff[i][j] = LJetEff_temp[i][j];
        CJetEff[i][j] = CJetEff_temp[i][j];
        BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }
  
  //======================================================================//
  
  //For the sample WZ_WZTo3LNu:
  if(MCSample == 31){
    float BJetEff_temp[3][8] = {{0.7173553705215454, 0.7234042286872864, 0.7535211443901062, 0.6845238208770752, 0.6865671873092651, 0.7372881174087524, 0.7721518874168396, 1.0}, {0.6327272653579712, 0.7203390002250671, 0.7268292903900146, 0.7285714149475098, 0.6890756487846375, 0.6666666865348816, 0.6744186282157898, 0.6000000238418579}, {0.5833333134651184, 0.6413043737411499, 0.6357142925262451, 0.6164383292198181, 0.7818182110786438, 0.7435897588729858, 0.5, 1.0}};
    float CJetEff_temp[3][8] = {{0.16991983354091644, 0.14850664138793945, 0.14382752776145935, 0.13858695328235626, 0.13894422352313995, 0.16842105984687805, 0.21802325546741486, 0.2769230902194977}, {0.16228248178958893, 0.1515679508447647, 0.1347408890724182, 0.15012986958026886, 0.13843990862369537, 0.1589561104774475, 0.18974359333515167, 0.3333333432674408}, {0.13717694580554962, 0.12351029366254807, 0.12366737425327301, 0.11172566562891006, 0.13856427371501923, 0.15123456716537476, 0.1964285671710968, 0.1428571492433548}};
    float LJetEff_temp[3][8] = {{0.013345280662178993, 0.007206250447779894, 0.006760106422007084, 0.007310204207897186, 0.008963274769484997, 0.012319168075919151, 0.029187580570578575, 0.09333333373069763}, {0.01668243110179901, 0.010239061899483204, 0.010605895891785622, 0.01062028668820858, 0.013435114175081253, 0.022311745211482048, 0.05758056044578552, 0.1339285671710968}, {0.022415196523070335, 0.014865033328533173, 0.01506951916962862, 0.017381375655531883, 0.02122114598751068, 0.0366826169192791, 0.07298136502504349, 0.2083333283662796}};
    
    for(int i=0; i<3 ; i++){
      for(int j=0; j<8; j++){
        LJetEff[i][j] = LJetEff_temp[i][j];
        CJetEff[i][j] = CJetEff_temp[i][j];
        BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }

  //======================================================================//

  //For the sample WW_WWTo1L1Nu2Q:
  if(MCSample == 40){
    float BJetEff_temp[3][8] = {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    float CJetEff_temp[3][8] = {{0.0, 0.25, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    float LJetEff_temp[3][8] = {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    for(int i=0; i<3 ; i++){
      for(int j=0; j<8; j++){
        LJetEff[i][j] = LJetEff_temp[i][j];
        CJetEff[i][j] = CJetEff_temp[i][j];
        BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }
    
  //For the sample WW_WWTo2L2Nu:
  if(MCSample == 41){
    float BJetEff_temp[3][8] = {{0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    float CJetEff_temp[3][8] = {{0.0, 0.0, 1.0, 0.0, 0.3333333432674408, 0.0, 0.0, 0.0}, {0.1666666716337204, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    float LJetEff_temp[3][8] = {{0.07692307978868484, 0.05000000074505806, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.07407407462596893, 0.0, 0.09090909361839294, 0.10000000149011612, 0.0, 0.0, 1.0, 0.0}};
    
    for(int i=0; i<3 ; i++){
      for(int j=0; j<8; j++){
        LJetEff[i][j] = LJetEff_temp[i][j];
        CJetEff[i][j] = CJetEff_temp[i][j];
        BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }
    
  //======================================================================//
  
  //For the sample SingleTop_t-channel_Top:
  if(MCSample == 50){
    float BJetEff_temp[3][8] = {{0.8181818127632141, 0.75, 0.7142857313156128, 1.0, 0.8333333134651184, 0.0, 0.0, 0.0}, {0.7142857313156128, 0.8333333134651184, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0}, {0.75, 1.0, 1.0, 1.0, 0.0, 0.5, 0.0, 0.0}};
    float CJetEff_temp[3][8] = {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    float LJetEff_temp[3][8] = {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.3333333432674408, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    for(int i=0; i<3 ; i++){
      for(int j=0; j<8; j++){
        LJetEff[i][j] = LJetEff_temp[i][j];
        CJetEff[i][j] = CJetEff_temp[i][j];
        BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }
      
  //For the sample SingleTop_t-channel_AntiTop:
  if(MCSample == 51){
    float BJetEff_temp[3][8] = {{0.6666666865348816, 1.0, 0.7142857313156128, 1.0, 0.0, 0.0, 0.0, 0.0}, {0.75, 1.0, 1.0, 0.3333333432674408, 0.0, 1.0, 1.0, 0.0}, {0.5, 0.5, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    float CJetEff_temp[3][8] = {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0}};
    float LJetEff_temp[3][8] = {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};

    for(int i=0; i<3 ; i++){
      for(int j=0; j<8; j++){
        LJetEff[i][j] = LJetEff_temp[i][j];
        CJetEff[i][j] = CJetEff_temp[i][j];
        BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }

  //For the sample SingleTop_s-channel_LeptonDecays:
  if(MCSample == 52){
    float BJetEff_temp[3][8] = {{0.7777777910232544, 0.800000011920929, 0.75, 1.0, 1.0, 1.0, 0.0, 0.0}, {0.6666666865348816, 0.5, 0.5, 1.0, 0.5, 1.0, 0.0, 0.0}, {0.3333333432674408, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0}};
    float CJetEff_temp[3][8] = {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    float LJetEff_temp[3][8] = {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    for(int i=0; i<3 ; i++){
      for(int j=0; j<8; j++){
        LJetEff[i][j] = LJetEff_temp[i][j];
        CJetEff[i][j] = CJetEff_temp[i][j];
        BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }  
    
  //For the sample SingleTop_tW_AntiTop:
  if(MCSample == 53){
    float BJetEff_temp[3][8] = {{0.75, 0.75, 0.8461538553237915, 0.8333333134651184, 1.0, 0.5, 0.0, 0.0}, {0.5454545617103577, 0.5714285969734192, 0.7777777910232544, 0.75, 0.5, 1.0, 1.0, 0.0}, {0.5, 1.0, 0.75, 0.0, 0.0, 0.0, 0.0, 0.0}};
    float CJetEff_temp[3][8] = {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    float LJetEff_temp[3][8] = {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.3333333432674408, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    for(int i=0; i<3 ; i++){
      for(int j=0; j<8; j++){
        LJetEff[i][j] = LJetEff_temp[i][j];
        CJetEff[i][j] = CJetEff_temp[i][j];
        BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }
  
  //For the sample SingleTop_tW_Top:
  if(MCSample == 54){
    float BJetEff_temp[3][8] = {{0.875, 0.8666666746139526, 1.0, 0.6666666865348816, 0.5, 0.5, 1.0, 0.0}, {0.8571428656578064, 0.75, 1.0, 0.6000000238418579, 0.6666666865348816, 0.5, 0.0, 1.0}, {0.6666666865348816, 0.6666666865348816, 0.5, 0.3333333432674408, 0.0, 0.0, 0.0, 0.0}};
    float CJetEff_temp[3][8] = {{1.0, 0.0, 0.0, 0.3333333432674408, 0.0, 1.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    float LJetEff_temp[3][8] = {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};

    for(int i=0; i<3 ; i++){
      for(int j=0; j<8; j++){
        LJetEff[i][j] = LJetEff_temp[i][j];
        CJetEff[i][j] = CJetEff_temp[i][j];
        BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }

  //======================================================================//

  //For the sample TTBar_TTToSemiLeptonic:
  if(MCSample == 61){
    float BJetEff_temp[3][8] = {{0.8057143092155457, 0.7902097702026367, 0.8176100850105286, 0.8260869383811951, 0.7916666865348816, 0.5333333611488342, 1.0, 0.0}, {0.778761088848114, 0.7777777910232544, 0.782608687877655, 0.8030303120613098, 0.8611111044883728, 0.875, 1.0, 0.0}, {0.607594907283783, 0.577464759349823, 0.6875, 0.7941176295280457, 0.7692307829856873, 0.8333333134651184, 0.0, 0.0}};
    float CJetEff_temp[3][8] = {{0.18309858441352844, 0.12280701845884323, 0.12727272510528564, 0.1785714328289032, 0.10000000149011612, 0.25, 0.20000000298023224, 0.0}, {0.16867469251155853, 0.2708333432674408, 0.1794871836900711, 0.13333334028720856, 0.1666666716337204, 0.6000000238418579, 0.0, 0.0}, {0.26530611515045166, 0.0, 0.0555555559694767, 0.0, 0.0, 0.0, 0.0, 0.0}};
    float LJetEff_temp[3][8] = {{0.01595744676887989, 0.021367521956562996, 0.011428571306169033, 0.02150537632405758, 0.0, 0.0, 0.0, 0.0}, {0.012578615918755531, 0.005154639016836882, 0.007246376946568489, 0.012987012974917889, 0.0, 0.0, 0.1666666716337204, 0.0}, {0.060975611209869385, 0.0260869562625885, 0.009999999776482582, 0.03773584961891174, 0.0, 0.0, 0.1666666716337204, 0.0}};
 
      for(int i=0; i<3 ; i++){
      for(int j=0; j<8; j++){
        LJetEff[i][j] = LJetEff_temp[i][j];
        CJetEff[i][j] = CJetEff_temp[i][j];
        BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }
      
  //For the sample TTBar_TTTo2L2Nu:
  if(MCSample == 60){
    float BJetEff_temp[3][8] = {{0.7835926413536072, 0.8099678158760071, 0.835422158241272, 0.8200883269309998, 0.8448074460029602, 0.8197425007820129, 0.7555555701255798, 0.0}, {0.7416573166847229, 0.7836663722991943, 0.7838565111160278, 0.791604220867157, 0.8046594858169556, 0.8695651888847351, 0.6521739363670349, 0.0}, {0.6445993185043335, 0.7103873491287231, 0.7052631378173828, 0.7314285635948181, 0.7178217768669128, 0.7555555701255798, 1.0, 0.0}};
    float CJetEff_temp[3][8] = {{0.1744185984134674, 0.1568627506494522, 0.1428571492433548, 0.1428571492433548, 0.23076923191547394, 0.17241379618644714, 0.1428571492433548, 0.0}, {0.12154696136713028, 0.15789473056793213, 0.17105263471603394, 0.1304347813129425, 0.1702127605676651, 0.3333333432674408, 0.1428571492433548, 1.0}, {0.1034482792019844, 0.1269841343164444, 0.11666666716337204, 0.1515151560306549, 0.03999999910593033, 0.0714285746216774, 0.10000000149011612, 0.0}};
    float LJetEff_temp[3][8] = {{0.018664980307221413, 0.005327245220541954, 0.010934393852949142, 0.01076923031359911, 0.01587301678955555, 0.00803212821483612, 0.022058824077248573, 0.1428571492433548}, {0.017707662656903267, 0.012204424478113651, 0.01456815842539072, 0.009693053551018238, 0.018372703343629837, 0.03879310190677643, 0.0923076942563057, 0.2857142984867096}, {0.024139296263456345, 0.016579406335949898, 0.01589241996407509, 0.016260161995887756, 0.02247191034257412, 0.02150537632405758, 0.02380952425301075, 0.0}};
    
    for(int i=0; i<3 ; i++){
      for(int j=0; j<8; j++){
        LJetEff[i][j] = LJetEff_temp[i][j];
        CJetEff[i][j] = CJetEff_temp[i][j];
        BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }
  
  //======================================================================//

  //For the sample TTZ_TTZToLL:
  if(MCSample == 80){
    float BJetEff_temp[3][8] = {{0.7680933475494385, 0.796429455280304, 0.8089866042137146, 0.8145511746406555, 0.8170294761657715, 0.8135664463043213, 0.7957345247268677, 0.746329128742218}, {0.7291954755783081, 0.7598113417625427, 0.7760025858879089, 0.78420490026474, 0.792009174823761, 0.7887396216392517, 0.7788999080657959, 0.7285180687904358}, {0.6521280407905579, 0.6832374930381775, 0.6995947360992432, 0.7125548124313354, 0.7241156101226807, 0.7309951782226562, 0.7260377407073975, 0.6944444179534912}};
    float CJetEff_temp[3][8] = {{0.16876883804798126, 0.14490923285484314, 0.13862328231334686, 0.13570140302181244, 0.14053288102149963, 0.1647469401359558, 0.20077307522296906, 0.260368674993515}, {0.15899497270584106, 0.1458655595779419, 0.1421179324388504, 0.14918816089630127, 0.1573086977005005, 0.1757308542728424, 0.23228932917118073, 0.2291666716337204}, {0.14217446744441986, 0.12648583948612213, 0.11945287138223648, 0.11973882466554642, 0.141314297914505, 0.16251638531684875, 0.2104557603597641, 0.25}};
    float LJetEff_temp[3][8] = {{0.017836980521678925, 0.01122567243874073, 0.009973772801458836, 0.009539847262203693, 0.010975276120007038, 0.01388698723167181, 0.030486933887004852, 0.10159924626350403}, {0.020656857639551163, 0.01314492803066969, 0.012529074214398861, 0.012883496470749378, 0.01657935045659542, 0.027324413880705833, 0.057003408670425415, 0.15181058645248413}, {0.02575128711760044, 0.017435647547245026, 0.015685277059674263, 0.018345873802900314, 0.02310778945684433, 0.035773612558841705, 0.07000603526830673, 0.16483516991138458}};

    for(int i=0; i<3 ; i++){
      for(int j=0; j<8; j++){
        LJetEff[i][j] = LJetEff_temp[i][j];
        CJetEff[i][j] = CJetEff_temp[i][j];
        BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }
   
  //For the sample TTW_TTWToLNu:
  if(MCSample == 81){
    float BJetEff_temp[3][8] = {{0.7752808928489685, 0.78526771068573, 0.7983800172805786, 0.8284863829612732, 0.8131381869316101, 0.8237463235855103, 0.8096385598182678, 0.75}, {0.7409264445304871, 0.7734269499778748, 0.7858709096908569, 0.785616934299469, 0.811919093132019, 0.8038740754127502, 0.7714285850524902, 0.4000000059604645}, {0.6548027396202087, 0.676250696182251, 0.6992009282112122, 0.7017225623130798, 0.7171052694320679, 0.7544642686843872, 0.7857142686843872, 0.0}};
    float CJetEff_temp[3][8] = {{0.1818181872367859, 0.15111111104488373, 0.1463414579629898, 0.1387283205986023, 0.13286712765693665, 0.14150942862033844, 0.23404255509376526, 0.5}, {0.16065573692321777, 0.1149425283074379, 0.1764705926179886, 0.17518247663974762, 0.16260161995887756, 0.18000000715255737, 0.20000000298023224, 0.8333333134651184}, {0.15837104618549347, 0.10769230872392654, 0.08849557489156723, 0.12987013161182404, 0.125, 0.10000000149011612, 0.0625, 0.0}};
    float LJetEff_temp[3][8] = {{0.01584114320576191, 0.01158480066806078, 0.007857517339289188, 0.005645730532705784, 0.005309734493494034, 0.013829787261784077, 0.03501945361495018, 0.10000000149011612}, {0.018158236518502235, 0.013917526230216026, 0.016119403764605522, 0.011272141709923744, 0.018112488090991974, 0.02416570857167244, 0.06288343667984009, 0.16417910158634186}, {0.024761231616139412, 0.010729613713920116, 0.01602262072265148, 0.01001251582056284, 0.026941362768411636, 0.042889390140771866, 0.05447470769286156, 0.3076923191547394}};
    
    for(int i=0; i<3 ; i++){
      for(int j=0; j<8; j++){
        LJetEff[i][j] = LJetEff_temp[i][j];
        CJetEff[i][j] = CJetEff_temp[i][j];
        BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }
    
  //======================================================================//
  
  //For the sample WWW_Inclusive:
  if(MCSample == 90){
    float BJetEff_temp[3][8] = {{1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.5, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    float CJetEff_temp[3][8] = {{0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0}, {1.0, 0.5, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    float LJetEff_temp[3][8] = {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0833333358168602, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0714285746216774, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    for(int i=0; i<3 ; i++){
      for(int j=0; j<8; j++){
        LJetEff[i][j] = LJetEff_temp[i][j];
        CJetEff[i][j] = CJetEff_temp[i][j];
        BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }

  //For the sample WWZ_Inclusive:
  if(MCSample == 91){
    float BJetEff_temp[3][8] = {{0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    float CJetEff_temp[3][8] = {{0.0, 0.5714285969734192, 0.5, 0.0, 0.0, 0.3333333432674408, 0.0, 1.0}, {0.09090909361839294, 0.0, 0.2222222238779068, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.5, 0.0, 1.0, 0.0, 0.0}};
    float LJetEff_temp[3][8] = {{0.0, 0.025641025975346565, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.04878048598766327, 0.0, 0.0625, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};

    for(int i=0; i<3 ; i++){
      for(int j=0; j<8; j++){
        LJetEff[i][j] = LJetEff_temp[i][j];
        CJetEff[i][j] = CJetEff_temp[i][j];
        BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }
    
    
  //For the sample WZZ_Inclusive:
  if(MCSample == 92){
    float BJetEff_temp[3][8] = {{0.7368420958518982, 0.800000011920929, 0.8399999737739563, 0.6153846383094788, 0.8333333134651184, 1.0, 1.0, 1.0}, {0.699999988079071, 0.7777777910232544, 0.625, 0.9090909361839294, 0.75, 0.6666666865348816, 0.75, 0.0}, {0.6153846383094788, 0.8999999761581421, 0.7142857313156128, 0.75, 1.0, 1.0, 0.0, 0.0}};
    float CJetEff_temp[3][8] = {{0.1428571492433548, 0.07999999821186066, 0.29032257199287415, 0.1764705926179886, 0.3529411852359772, 0.0, 0.2222222238779068, 0.0}, {0.16129031777381897, 0.1304347813129425, 0.06666667014360428, 0.1764705926179886, 0.0, 0.20000000298023224, 0.6000000238418579, 0.0}, {0.1428571492433548, 0.0, 0.1666666716337204, 0.0, 0.0, 0.0, 1.0, 0.0}};
    float LJetEff_temp[3][8] = {{0.004291845485568047, 0.006451612804085016, 0.007575757801532745, 0.0, 0.0, 0.0, 0.06382978707551956, 0.0}, {0.020202020183205605, 0.009523809887468815, 0.0, 0.023255813866853714, 0.032786883413791656, 0.043478261679410934, 0.21212121844291687, 0.0}, {0.03750000149011612, 0.0, 0.013513513840734959, 0.02222222276031971, 0.029411764815449715, 0.0714285746216774, 0.0, 0.0}};
    
    for(int i=0; i<3 ; i++){
      for(int j=0; j<8; j++){
        LJetEff[i][j] = LJetEff_temp[i][j];
        CJetEff[i][j] = CJetEff_temp[i][j];
        BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }
    
    
    
  //For the sample ZZZ_Inclusive:
  if(MCSample == 93){
    float BJetEff_temp[3][8] = {{0.8461538553237915, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0}, {1.0, 1.0, 0.3333333432674408, 1.0, 1.0, 0.0, 0.0, 0.0}, {1.0, 1.0, 1.0, 0.5, 1.0, 0.0, 0.0, 0.0}};
    float CJetEff_temp[3][8] = {{0.125, 0.30000001192092896, 0.20000000298023224, 0.1666666716337204, 0.5, 0.0, 1.0, 0.0}, {0.1111111119389534, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.3333333432674408, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    float LJetEff_temp[3][8] = {{0.0, 0.0, 0.0, 0.0, 0.0555555559694767, 0.0, 0.0, 0.0}, {0.0, 0.021739130839705467, 0.0, 0.09090909361839294, 0.0, 0.0, 0.0, 0.0}, {0.027027027681469917, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    for(int i=0; i<3 ; i++){
      for(int j=0; j<8; j++){
        LJetEff[i][j] = LJetEff_temp[i][j];
        CJetEff[i][j] = CJetEff_temp[i][j];
        BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }

  //======================================================================//

  //For the sample ZGamma_ZGToLLG:
  if(MCSample == 94){
    float BJetEff_temp[3][8] = {{0.7544910311698914, 0.8200836777687073, 0.8115183115005493, 0.790123462677002, 0.8529411554336548, 0.75, 1.0, 0.0}, {0.7592137455940247, 0.7230769395828247, 0.739130437374115, 0.7183098793029785, 0.8214285969734192, 0.7647058963775635, 0.8333333134651184, 0.0}, {0.6335616707801819, 0.6940298676490784, 0.7108433842658997, 0.78125, 0.6111111044883728, 0.5, 0.0, 0.0}};
    float CJetEff_temp[3][8] = {{0.18756936490535736, 0.12765957415103912, 0.12580645084381104, 0.16568046808242798, 0.13636364042758942, 0.095238097012043, 0.1764705926179886, 0.0}, {0.13797467947006226, 0.13445378839969635, 0.14574898779392242, 0.18382352590560913, 0.21794871985912323, 0.13636364042758942, 0.1428571492433548, 0.0}, {0.14974182844161987, 0.1201716735959053, 0.08124999701976776, 0.09333333373069763, 0.2142857164144516, 0.07692307978868484, 0.0, 0.0}};
    float LJetEff_temp[3][8] = {{0.013949335552752018, 0.00781046599149704, 0.0077738515101373196, 0.007138221990317106, 0.0045095826499164104, 0.012224938720464706, 0.012195121496915817, 0.0714285746216774}, {0.017740905284881592, 0.011070110835134983, 0.013405948877334595, 0.01453710813075304, 0.011834319680929184, 0.02506963722407818, 0.0476190485060215, 0.27272728085517883}, {0.023080868646502495, 0.01342281885445118, 0.01034482754766941, 0.01291989628225565, 0.03133159130811691, 0.0235294122248888, 0.17391304671764374, 0.0}};
    
    for(int i=0; i<3 ; i++){
      for(int j=0; j<8; j++){
        LJetEff[i][j] = LJetEff_temp[i][j];
        CJetEff[i][j] = CJetEff_temp[i][j];
        BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }

  //======================================================================//

  //For the sample bbH_HToZZTo4L
  if(MCSample == 100){
    float BJetEff_temp[3][8] = {{0.7494456768035889, 0.8050239086151123, 0.7978261113166809, 0.8513513803482056, 0.8733333349227905, 0.8387096524238586, 0.8571428656578064, 0.0}, {0.7351077198982239, 0.75, 0.8017621040344238, 0.8215962648391724, 0.75789475440979, 0.8510638475418091, 0.9090909361839294, 0.0}, {0.6254071593284607, 0.6829787492752075, 0.7024539709091187, 0.7153846025466919, 0.7213114500045776, 0.5714285969734192, 0.0, 0.0}};
    float CJetEff_temp[3][8] = {{0.14649681746959686, 0.15789473056793213, 0.25, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.09848485141992569, 0.31481480598449707, 0.09090909361839294, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.09022556245326996, 0.17241379618644714, 0.1428571492433548, 0.0, 0.0, 0.0, 0.0, 0.0}};
    float LJetEff_temp[3][8] = {{0.03197987750172615, 0.019077900797128677, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.034157831221818924, 0.03188405930995941, 0.016393441706895828, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.037163812667131424, 0.0178217813372612, 0.020202020183205605, 0.1111111119389534, 0.0, 0.0, 0.0, 0.0}};
    
    for(int i=0; i<3 ; i++){
      for(int j=0; j<8; j++){
        LJetEff[i][j] = LJetEff_temp[i][j];
        CJetEff[i][j] = CJetEff_temp[i][j];
        BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }
      
  //For the sample GluGluHToZZTo4L
  if(MCSample == 101){
    float BJetEff_temp[3][8] = {{0.7478991746902466, 0.7547169923782349, 0.6739130616188049, 0.800000011920929, 0.8571428656578064, 0.5454545617103577, 0.800000011920929, 0.0}, {0.7526881694793701, 0.8666666746139526, 0.75, 0.9047619104385376, 0.9090909361839294, 0.8333333134651184, 0.0, 0.0}, {0.6631578803062439, 0.6458333134651184, 0.75, 0.8823529481887817, 0.5, 0.5714285969734192, 0.0, 0.0}};
    float CJetEff_temp[3][8] = {{0.14084507524967194, 0.1785714328289032, 0.19847328960895538, 0.1388888955116272, 0.11764705926179886, 0.17391304671764374, 0.11764705926179886, 0.0}, {0.13649851083755493, 0.16875000298023224, 0.1953125, 0.1538461595773697, 0.17391304671764374, 0.15789473056793213, 0.1428571492433548, 0.0}, {0.12334802001714706, 0.2075471729040146, 0.03333333507180214, 0.06521739065647125, 0.05263157933950424, 0.1666666716337204, 0.3333333432674408, 0.0}};
    float LJetEff_temp[3][8] = {{0.032729316502809525, 0.01200686115771532, 0.00953389797359705, 0.009657594375312328, 0.006702412851154804, 0.021447721868753433, 0.04651162773370743, 0.0}, {0.0316164456307888, 0.01074870303273201, 0.008022923022508621, 0.017543859779834747, 0.010889291763305664, 0.02675585262477398, 0.05000000074505806, 0.0}, {0.04154361039400101, 0.01781296357512474, 0.015661707147955894, 0.008733624592423439, 0.020151132717728615, 0.024390242993831635, 0.019999999552965164, 0.0}};
    
    for(int i=0; i<3 ; i++){
      for(int j=0; j<8; j++){
        LJetEff[i][j] = LJetEff_temp[i][j];
        CJetEff[i][j] = CJetEff_temp[i][j];
        BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }

  //For the sample GluGluToZH_HToZZTo4L
  if(MCSample == 102){
    float BJetEff_temp[3][8] = {{0.7816239595413208, 0.8417350649833679, 0.8382264971733093, 0.8641087412834167, 0.8472440838813782, 0.8834080696105957, 0.8648648858070374, 1.0}, {0.7324841022491455, 0.7692307829856873, 0.8062605857849121, 0.8301675915718079, 0.8646789193153381, 0.8474576473236084, 0.9473684430122375, 0.0}, {0.678223192691803, 0.6946428418159485, 0.7203065156936646, 0.7212543487548828, 0.7950819730758667, 0.7419354915618896, 1.0, 0.0}};
    float CJetEff_temp[3][8] = {{0.1974944770336151, 0.16936416923999786, 0.1719483584165573, 0.16757600009441376, 0.18730159103870392, 0.2331606149673462, 0.3571428656578064, 0.0}, {0.17720907926559448, 0.15835312008857727, 0.16419142484664917, 0.15347722172737122, 0.18284423649311066, 0.2410714328289032, 0.2666666805744171, 0.0}, {0.15933610498905182, 0.17465223371982574, 0.13539652526378632, 0.15902140736579895, 0.16129031777381897, 0.2702702581882477, 0.0, 0.0}};
    float LJetEff_temp[3][8] = {{0.03447624295949936, 0.022026430815458298, 0.01589418761432171, 0.014185553416609764, 0.018143754452466965, 0.022781774401664734, 0.028169013559818268, 0.0}, {0.037008773535490036, 0.024109262973070145, 0.021781878545880318, 0.02024197392165661, 0.02516033500432968, 0.02798507548868656, 0.016393441706895828, 0.0}, {0.04136233776807785, 0.02110321819782257, 0.02282947115600109, 0.027890760451555252, 0.031770046800374985, 0.057553958147764206, 0.0, 0.0}};

    for(int i=0; i<3 ; i++){
      for(int j=0; j<8; j++){
        LJetEff[i][j] = LJetEff_temp[i][j];
        CJetEff[i][j] = CJetEff_temp[i][j];
        BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }  
    
  //For the sample GluGluZH_HToWW_ZTo2L
  if(MCSample == 103){
    float BJetEff_temp[3][8] = {{0.8863636255264282, 0.8799999952316284, 0.8571428656578064, 0.8571428656578064, 0.7142857313156128, 0.800000011920929, 0.75, 1.0}, {0.7599999904632568, 0.7647058963775635, 0.9444444179534912, 0.6875, 0.699999988079071, 0.7857142686843872, 0.75, 0.0}, {0.5652173757553101, 0.6111111044883728, 0.800000011920929, 0.5714285969734192, 0.75, 0.3333333432674408, 1.0, 0.0}};
    float CJetEff_temp[3][8] = {{0.19134078919887543, 0.14942528307437897, 0.1586901694536209, 0.16818182170391083, 0.16239316761493683, 0.1860465109348297, 0.3076923191547394, 0.3333333432674408}, {0.18145161867141724, 0.1624203771352768, 0.1690647453069687, 0.20000000298023224, 0.09459459781646729, 0.21875, 0.13333334028720856, 0.5}, {0.15079365670681, 0.13333334028720856, 0.11764705926179886, 0.13793103396892548, 0.095238097012043, 0.1428571492433548, 0.0, 0.0}};
    float LJetEff_temp[3][8] = {{0.022688599303364754, 0.009578543715178967, 0.006666666828095913, 0.011470281518995762, 0.006968641187995672, 0.018561484292149544, 0.011363636702299118, 0.0}, {0.02129097655415535, 0.01718440093100071, 0.007961783558130264, 0.010869565419852734, 0.012396694160997868, 0.025495750829577446, 0.04680851101875305, 0.07692307978868484}, {0.024403471499681473, 0.015991471707820892, 0.017735334113240242, 0.0091116176918149, 0.03956834599375725, 0.030456852167844772, 0.06611569970846176, 0.0}};
    
    for(int i=0; i<3 ; i++){
      for(int j=0; j<8; j++){
        LJetEff[i][j] = LJetEff_temp[i][j];
        CJetEff[i][j] = CJetEff_temp[i][j];
        BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }
  
  //For the sample ttHToNonbb
  if(MCSample == 104){
    float BJetEff_temp[3][8] = {{0.7726199626922607, 0.808012068271637, 0.8184300065040588, 0.8128469586372375, 0.8243727684020996, 0.8121547102928162, 0.8120300769805908, 0.7857142686843872}, {0.7279735803604126, 0.7847533822059631, 0.799801766872406, 0.7995049357414246, 0.8047882318496704, 0.8097561001777649, 0.7777777910232544, 0.6000000238418579}, {0.6368821263313293, 0.6926714181900024, 0.739130437374115, 0.7565543055534363, 0.746666669845581, 0.688524603843689, 0.7142857313156128, 0.0}};
    float CJetEff_temp[3][8] = {{0.1682243049144745, 0.1493212729692459, 0.13235294818878174, 0.16025641560554504, 0.12121212482452393, 0.1818181872367859, 0.2916666567325592, 0.25}, {0.18103447556495667, 0.13907285034656525, 0.09022556245326996, 0.1149425283074379, 0.1538461595773697, 0.15000000596046448, 0.260869562625885, 0.75}, {0.12925170361995697, 0.0833333358168602, 0.1785714328289032, 0.23529411852359772, 0.1428571492433548, 0.125, 0.2222222238779068, 0.0}};
    float LJetEff_temp[3][8] = {{0.025309916585683823, 0.013416815549135208, 0.008830022066831589, 0.006932409014552832, 0.012755102477967739, 0.014150943607091904, 0.04545454680919647, 0.10000000149011612}, {0.02677459456026554, 0.017942583188414574, 0.013392857275903225, 0.013483146205544472, 0.03630363196134567, 0.03932584449648857, 0.059405941516160965, 0.0714285746216774}, {0.034280117601156235, 0.013725490309298038, 0.021834060549736023, 0.020325202494859695, 0.012658228166401386, 0.06185567006468773, 0.05999999865889549, 0.0}};
    
    for(int i=0; i<3 ; i++){
      for(int j=0; j<8; j++){
        LJetEff[i][j] = LJetEff_temp[i][j];
        CJetEff[i][j] = CJetEff_temp[i][j];
        BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }
  
  //For the sample VBF_HToZZTo4L
  if(MCSample == 105){
    float BJetEff_temp[3][8] = {{0.75, 0.7272727489471436, 0.8947368264198303, 0.8125, 0.8571428656578064, 0.8333333134651184, 0.0, 0.0}, {0.6875, 0.7599999904632568, 0.8333333134651184, 0.875, 0.4545454680919647, 1.0, 0.0, 0.0}, {0.6000000238418579, 0.7333333492279053, 0.7647058963775635, 0.6000000238418579, 1.0, 0.6666666865348816, 0.0, 0.0}};
    float CJetEff_temp[3][8] = {{0.1840796023607254, 0.1315789520740509, 0.1552795022726059, 0.18421052396297455, 0.1794871836900711, 0.29411765933036804, 0.0, 0.0}, {0.1569506675004959, 0.16025641560554504, 0.1599999964237213, 0.13636364042758942, 0.21917808055877686, 0.06666667014360428, 0.0, 0.0}, {0.16587677597999573, 0.1538461595773697, 0.125, 0.05999999865889549, 0.08474576473236084, 0.31578946113586426, 0.1428571492433548, 0.0}};
    float LJetEff_temp[3][8] = {{0.04025423899292946, 0.006203474011272192, 0.003870967775583267, 0.009107467718422413, 0.013550135307013988, 0.02604166604578495, 0.0, 0.0}, {0.03442028909921646, 0.02123142220079899, 0.01037344429641962, 0.008633093908429146, 0.011682243086397648, 0.0416666679084301, 0.09433962404727936, 0.0}, {0.033389925956726074, 0.010507880710065365, 0.014925372786819935, 0.01902497000992298, 0.03393213450908661, 0.027397260069847107, 0.04109589010477066, 0.0}};
    
    for(int i=0; i<3 ; i++){
      for(int j=0; j<8; j++){
        LJetEff[i][j] = LJetEff_temp[i][j];
        CJetEff[i][j] = CJetEff_temp[i][j];
        BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }
  
  //For the sample VHToNonbb
  if(MCSample == 106){
    float BJetEff_temp[3][8] = {{1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.25, 0.5, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0}, {0.6666666865348816, 1.0, 0.0, 1.0, 0.0, 0.3333333432674408, 0.0, 0.0}};
    float CJetEff_temp[3][8] = {{0.18518517911434174, 0.1428571492433548, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.11764705926179886, 0.0, 0.5, 0.0, 1.0, 0.0, 0.0, 0.0}, {0.1428571492433548, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    float LJetEff_temp[3][8] = {{0.032608695328235626, 0.012658228166401386, 0.01666666753590107, 0.043478261679410934, 0.0, 0.0833333358168602, 0.0, 0.0}, {0.04444444552063942, 0.05797101557254791, 0.0, 0.0, 0.1111111119389534, 0.0, 0.0, 0.0}, {0.029411764815449715, 0.0, 0.05263157933950424, 0.05263157933950424, 0.09090909361839294, 0.0, 0.0, 0.0}};
    
    for(int i=0; i<3 ; i++){
      for(int j=0; j<8; j++){
        LJetEff[i][j] = LJetEff_temp[i][j];
        CJetEff[i][j] = CJetEff_temp[i][j];
        BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }

  //======================================================================//
  
  for (int i = 0; i < (int)Jet.size(); i++){
    float jet_prob_mc = 1.0;
    float jet_prob_data = 1.0;
    float jet_eff = 1.0;
    // choose pt bin
    int ptbin=-1;
    if     ( Jet.at(i).v.Pt() < 50  )  ptbin=0;
    else if( Jet.at(i).v.Pt() < 70  )  ptbin=1;
    else if( Jet.at(i).v.Pt() < 100 )  ptbin=2;
    else if( Jet.at(i).v.Pt() < 140 )  ptbin=3;
    else if( Jet.at(i).v.Pt() < 200 )  ptbin=4;
    else if( Jet.at(i).v.Pt() < 300 )  ptbin=5;
    else if( Jet.at(i).v.Pt() < 600 )  ptbin=6;
    else                               ptbin=7;
    // choose eta bin
    int etabin=-1;
    if      ( fabs(Jet.at(i).v.Eta()) < 0.8 ) etabin=0;
    else if ( fabs(Jet.at(i).v.Eta()) < 1.6 ) etabin=1;
    else if ( fabs(Jet.at(i).v.Eta()) < 2.4 ) etabin=2;
    else                                 continue;
    // choose flavor  
    if      ( Jet.at(i).hadronflavor == 5 ) jet_eff = BJetEff[etabin][ptbin];
    else if ( Jet.at(i).hadronflavor == 4 ) jet_eff = CJetEff[etabin][ptbin];
    else                                    jet_eff = LJetEff[etabin][ptbin];

    double SFfromPOG =  1.0;
    if( Jet.at(i).hadronflavor == 5 )
      SFfromPOG = getScaleFactors_bTagJets_MedWP_UL16preVFP(Jet.at(i).v.Eta(),Jet.at(i).v.Pt());
    else if(Jet.at(i).hadronflavor == 4 )
      SFfromPOG = getScaleFactors_cTagJets_Mis_UL16preVFP(Jet.at(i).v.Eta(),Jet.at(i).v.Pt());
    else
      SFfromPOG = getScaleFactors_LightTagJets_Mis_UL16preVFP(Jet.at(i).v.Eta(),Jet.at(i).v.Pt());
    
    // check if jet is tagged or not
    if (Jet_btagDeepFlavB[Jet.at(i).ind] > 0.2598){
      jet_prob_data = jet_eff*SFfromPOG;
      jet_prob_mc   = jet_eff;
    }
    else {    
      jet_prob_data = 1-(jet_eff*SFfromPOG);
      jet_prob_mc   = 1-jet_eff;
    }
    
    probability_data *= jet_prob_data;
    probability_mc   *= jet_prob_mc;
  }
  
  float scaleFactor = 1.0;
  if (probability_mc > 0.0) scaleFactor = probability_data/probability_mc;
  
  return scaleFactor;
}

